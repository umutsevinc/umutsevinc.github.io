{"ast":null,"code":"import _objectSpread from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/umutsevinc/umut-website/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/umutsevinc/umut-website/src/Grid.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Measure from 'react-measure';\nimport { Transition, animated, interpolate } from 'react-spring';\nvar styles = {\n  outer: {\n    position: 'relative',\n    width: '100%',\n    height: '100%'\n  },\n  inner: {\n    position: 'relative',\n    width: '100%',\n    overflow: 'hidden',\n    minHeight: '100%'\n  },\n  cell: {\n    position: 'absolute',\n    willChange: 'transform, width, height, opacity'\n  }\n};\n\nvar Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  function Grid() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Grid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      width: 0,\n      height: 0,\n      open: undefined,\n      lastOpen: undefined\n    };\n\n    _this.scrollOut = function (e) {\n      if (!_this.props.lockScroll) {\n        _this.state.open && _this.toggle(undefined);\n        _this.clicked = false;\n      }\n    };\n\n    _this.toggle = function (key) {\n      return _this.setState(function (state) {\n        return {\n          lastOpen: state.open,\n          open: state.open === key ? undefined : key\n        };\n      }, function () {\n        return _this.clicked = true;\n      });\n    };\n\n    _this.resize = function (width, height, props) {\n      var _this$setState;\n\n      return _this.setState((_this$setState = {}, _defineProperty(_this$setState, width, props.client.width), _defineProperty(_this$setState, height, props.client.height), _this$setState));\n    };\n\n    _this.resizeOuter = function (props) {\n      return _this.resize('widthOuter', 'heightOuter', props);\n    };\n\n    _this.resizeInner = function (props) {\n      return _this.resize('width', 'height', props);\n    };\n\n    _this.update = function (_ref) {\n      var key = _ref.key,\n          x = _ref.x,\n          y = _ref.y,\n          width = _ref.width,\n          height = _ref.height;\n      var open = _this.state.open === key;\n      return {\n        opacity: _this.state.open && !open ? 0 : 1,\n        x: open ? _this.outerRef.scrollLeft : x,\n        y: open ? _this.outerRef.scrollTop : y,\n        width: open ? _this.state.width : width,\n        height: open ? _this.state.heightOuter : height\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Grid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.clicked = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          columns = _this$props.columns,\n          margin = _this$props.margin,\n          occupySpace = _this$props.occupySpace,\n          impl = _this$props.impl,\n          config = _this$props.config,\n          data = _this$props.data,\n          keys = _this$props.keys,\n          heights = _this$props.heights,\n          closeDelay = _this$props.closeDelay,\n          lockScroll = _this$props.lockScroll,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"columns\", \"margin\", \"occupySpace\", \"impl\", \"config\", \"data\", \"keys\", \"heights\", \"closeDelay\", \"lockScroll\"]);\n\n      var _this$state = this.state,\n          lastOpen = _this$state.lastOpen,\n          open = _this$state.open,\n          width = _this$state.width;\n      var column = 0;\n      var columnHeights = new Array(columns).fill(0);\n      var displayData = data.map(function (child, i) {\n        var index = occupySpace ? columnHeights.indexOf(Math.min.apply(Math, _toConsumableArray(columnHeights))) : column++ % columns;\n        var cellWidth = width / columns - margin / (1 - 1 / (columns + 1));\n        var left = cellWidth * index;\n        var offset = (index + 1) * margin;\n        var top = columnHeights[index] + margin;\n        var height = typeof heights === 'function' ? heights(child) : heights;\n        columnHeights[index] += height + margin;\n        return {\n          x: margin ? left + offset : left,\n          y: top,\n          width: cellWidth,\n          height: height,\n          key: keys(child),\n          object: child\n        };\n      });\n      var overflow = lockScroll ? open ? 'hidden' : 'auto' : 'auto';\n      var height = Math.max.apply(Math, _toConsumableArray(columnHeights)) + margin;\n      return React.createElement(Measure, {\n        client: true,\n        innerRef: function innerRef(r) {\n          return _this2.outerRef = r;\n        },\n        onResize: this.resizeOuter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, function (_ref2) {\n        var measureRef = _ref2.measureRef;\n        return React.createElement(\"div\", Object.assign({\n          ref: measureRef,\n          style: _objectSpread({}, styles.outer, _this2.props.style, {\n            overflow: overflow\n          })\n        }, rest, {\n          onScroll: _this2.scrollOut,\n          onWheel: _this2.scrollOut,\n          onTouchMove: _this2.scrollOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }), React.createElement(Measure, {\n          client: true,\n          innerRef: function innerRef(r) {\n            return _this2.innerRef = r;\n          },\n          onResize: _this2.resizeInner,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, function (_ref3) {\n          var measureRef = _ref3.measureRef;\n          return React.createElement(\"div\", {\n            ref: measureRef,\n            style: _objectSpread({}, styles.inner, {\n              height: height\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, React.createElement(Transition, {\n            native: true,\n            items: displayData,\n            keys: function keys(d) {\n              return d.key;\n            },\n            from: {\n              opacity: 0\n            },\n            leave: {\n              opacity: 0\n            },\n            enter: _this2.update,\n            update: _this2.update,\n            impl: impl,\n            config: _objectSpread({}, config, {\n              delay: _this2.clicked && !open ? closeDelay : 0\n            }),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, function (c, i) {\n            return function (_ref4) {\n              var opacity = _ref4.opacity,\n                  x = _ref4.x,\n                  y = _ref4.y,\n                  width = _ref4.width,\n                  height = _ref4.height;\n              return React.createElement(animated.div, {\n                style: _objectSpread({}, styles.cell, {\n                  opacity: opacity,\n                  width: width,\n                  height: height,\n                  zIndex: lastOpen === c.key || open === c.key ? 1000 : i,\n                  transform: interpolate([x, y], function (x, y) {\n                    return \"translate3d(\".concat(x, \"px,\").concat(y, \"px, 0)\");\n                  })\n                }),\n                children: children(c.object, open === c.key, function () {\n                  return _this2.toggle(c.key);\n                }),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 149\n                },\n                __self: this\n              });\n            };\n          }));\n        }));\n      });\n    }\n  }]);\n\n  return Grid;\n}(React.Component);\n\nGrid.propTypes = {\n  data: PropTypes.array,\n  keys: PropTypes.func,\n  occupySpace: PropTypes.bool,\n  columns: PropTypes.number,\n  margin: PropTypes.number,\n  heights: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n  lockScroll: PropTypes.bool,\n  closeDelay: PropTypes.number\n};\nGrid.defaultProps = {\n  occupySpace: true,\n  columns: 3,\n  margin: 0,\n  heights: 400,\n  lockScroll: false,\n  closeDelay: 0\n};\nexport { Grid as default };","map":{"version":3,"sources":["/Users/umutsevinc/umut-website/src/Grid.js"],"names":["React","PropTypes","Measure","Transition","animated","interpolate","styles","outer","position","width","height","inner","overflow","minHeight","cell","willChange","Grid","state","open","undefined","lastOpen","scrollOut","e","props","lockScroll","toggle","clicked","key","setState","resize","client","resizeOuter","resizeInner","update","x","y","opacity","outerRef","scrollLeft","scrollTop","heightOuter","children","columns","margin","occupySpace","impl","config","data","keys","heights","closeDelay","rest","column","columnHeights","Array","fill","displayData","map","child","i","index","indexOf","Math","min","cellWidth","left","offset","top","object","max","r","measureRef","style","innerRef","d","delay","c","zIndex","transform","Component","propTypes","array","func","bool","number","oneOfType","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Measure from 'react-measure'\nimport { Transition, animated, interpolate } from 'react-spring'\n\nconst styles = {\n    outer: { position: 'relative', width: '100%', height: '100%' },\n    inner: {\n        position: 'relative',\n        width: '100%',\n        overflow: 'hidden',\n        minHeight: '100%',\n    },\n    cell: {\n        position: 'absolute',\n        willChange: 'transform, width, height, opacity',\n    },\n}\n\nexport default class Grid extends React.Component {\n    static propTypes = {\n        data: PropTypes.array,\n        keys: PropTypes.func,\n        occupySpace: PropTypes.bool,\n        columns: PropTypes.number,\n        margin: PropTypes.number,\n        heights: PropTypes.oneOfType([PropTypes.func, PropTypes.number]),\n        lockScroll: PropTypes.bool,\n        closeDelay: PropTypes.number,\n    }\n    static defaultProps = {\n        occupySpace: true,\n        columns: 3,\n        margin: 0,\n        heights: 400,\n        lockScroll: false,\n        closeDelay: 0,\n    }\n    state = { width: 0, height: 0, open: undefined, lastOpen: undefined }\n    scrollOut = e => {\n        if (!this.props.lockScroll) {\n            this.state.open && this.toggle(undefined)\n            this.clicked = false\n        }\n    }\n    toggle = key =>\n        this.setState(\n            state => ({\n                lastOpen: state.open,\n                open: state.open === key ? undefined : key,\n            }),\n            () => (this.clicked = true)\n        )\n    resize = (width, height, props) =>\n        this.setState({\n            [width]: props.client.width,\n            [height]: props.client.height,\n        })\n    resizeOuter = props => this.resize('widthOuter', 'heightOuter', props)\n    resizeInner = props => this.resize('width', 'height', props)\n    update = ({ key, x, y, width, height }) => {\n        const open = this.state.open === key\n        return {\n            opacity: this.state.open && !open ? 0 : 1,\n            x: open ? this.outerRef.scrollLeft : x,\n            y: open ? this.outerRef.scrollTop : y,\n            width: open ? this.state.width : width,\n            height: open ? this.state.heightOuter : height,\n        }\n    }\n\n    componentDidUpdate() {\n        this.clicked = false\n    }\n\n    render() {\n        let {\n            children,\n            columns,\n            margin,\n            occupySpace,\n            impl,\n            config,\n            data,\n            keys,\n            heights,\n            closeDelay,\n            lockScroll,\n            ...rest\n        } = this.props\n        let { lastOpen, open, width } = this.state\n        let column = 0\n        let columnHeights = new Array(columns).fill(0)\n\n        let displayData = data.map((child, i) => {\n            let index = occupySpace\n                ? columnHeights.indexOf(Math.min(...columnHeights))\n                : column++ % columns\n            let cellWidth = width / columns - margin / (1 - 1 / (columns + 1))\n            let left = cellWidth * index\n            let offset = (index + 1) * margin\n            let top = columnHeights[index] + margin\n            let height = typeof heights === 'function' ? heights(child) : heights\n            columnHeights[index] += height + margin\n            return {\n                x: margin ? left + offset : left,\n                y: top,\n                width: cellWidth,\n                height,\n                key: keys(child),\n                object: child,\n            }\n        })\n        const overflow = lockScroll ? (open ? 'hidden' : 'auto') : 'auto'\n        const height = Math.max(...columnHeights) + margin\n        return (\n            <Measure\n                client\n                innerRef={r => (this.outerRef = r)}\n                onResize={this.resizeOuter}>\n                {({ measureRef }) => (\n                    <div\n                        ref={measureRef}\n                        style={{ ...styles.outer, ...this.props.style, overflow }}\n                        {...rest}\n                        onScroll={this.scrollOut}\n                        onWheel={this.scrollOut}\n                        onTouchMove={this.scrollOut}>\n                        <Measure\n                            client\n                            innerRef={r => (this.innerRef = r)}\n                            onResize={this.resizeInner}>\n                            {({ measureRef }) => (\n                                <div ref={measureRef} style={{ ...styles.inner, height }}>\n                                    <Transition\n                                        native\n                                        items={displayData}\n                                        keys={d => d.key}\n                                        from={{ opacity: 0 }}\n                                        leave={{ opacity: 0 }}\n                                        enter={this.update}\n                                        update={this.update}\n                                        impl={impl}\n                                        config={{\n                                            ...config,\n                                            delay: this.clicked && !open ? closeDelay : 0,\n                                        }}>\n                                        {(c, i) => ({ opacity, x, y, width, height }) => (\n                                            <animated.div\n                                                style={{\n                                                    ...styles.cell,\n                                                    opacity,\n                                                    width,\n                                                    height,\n                                                    zIndex:\n                                                        lastOpen === c.key || open === c.key ? 1000 : i,\n                                                    transform: interpolate(\n                                                        [x, y],\n                                                        (x, y) => `translate3d(${x}px,${y}px, 0)`\n                                                    ),\n                                                }}\n                                                children={children(c.object, open === c.key, () =>\n                                                    this.toggle(c.key)\n                                                )}\n                                            />\n                                        )}\n                                    </Transition>\n                                </div>\n                            )}\n                        </Measure>\n                    </div>\n                )}\n            </Measure>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}